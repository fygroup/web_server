(function($){var configs=null,tooltips={},maxZIndex=0,status={kpi:null,event:null,avail:null},number=null,viewCenterCoords=null,isNodeHang=false,isLineHang=false,isShowLabel=false,isNodeAdapter=false,nodeHangPos=1;$.topology.ui.tooltip4hang={isOpen:function(type){return type==1?isNodeHang:(type==2?isLineHang:(isNodeHang||isLineHang))},open:function(type){var _this=this;if(type!=1){if(!isLineHang){isLineHang=true;_this.show(type)}}if(type!=2){if(!isNodeHang){isNodeHang=true;_this.show(type)}}},close:function(type){var _this=this;if(type!=1){if(isLineHang){isLineHang=false;_this.hide(type)}}if(type!=2){if(isNodeHang){isNodeHang=false;_this.hide(type)}}},showLabel:function(){if(!isShowLabel){isShowLabel=true;$.each(tooltips,function(i,$tooltip){$tooltip.find(".hide").removeClass("hide")})}},hideLabel:function(){if(isShowLabel){isShowLabel=false;$.each(tooltips,function(i,$tooltip){$tooltip.find(".tiptdleft,.tiptdleft2").addClass("hide")})}},isShowLabel:function(){return isShowLabel},isNodeAdapter:function(){return isNodeAdapter},setNodeAdapter:function(flag,unadjust){isNodeAdapter=flag;!unadjust&&this.adjust()},getNodeHangPos:function(){return nodeHangPos},setNodeHangPos:function(idx,unadjust){nodeHangPos=idx;!unadjust&&this.adjust()},number:function(){if(number==null){number=0;$.each(["symbols","containers","lines","lineseters"],function(i,type){var map=$.topology.shapes[type];$.each(map,function(id,o){var cfg=configs[o.getObjectClass()];number+=cfg?1:0})})}return number},adjust:function(o){var _this=this,id=null,fn=function(id,$tooltip){var o=_this._getObjectById(id);if(_this.isOpen(_this.type(o))&&o.visible){if(!$.topology.isContainer(o)&&!$.topology.isLineseter(o)||!o.isExpand){_this._showTooltip(id,$tooltip,$tooltip.data("nodata"))}}};if(arguments.length==1){o=_this._getObjectById(o);id=o&&o.id}if(id){var $tooltip=tooltips[id];$tooltip&&fn.call($tooltip,id,$tooltip)}else{$.each(tooltips,fn)}},type:function(o){var _this=this;o=_this._getObjectById(o);return $.topology.isLine(o)||$.topology.isLineseter(o)?2:1},init:function(){var _this=this,objectClass=null,context,config=null;_this.reset();configs={};for(objectClass in $.topology.config.context){context=$.topology.config.context[objectClass];config=context&&context["HANG"];if(config){configs[objectClass]={hang:config,kpi:$.topology.config.kpi[objectClass]}}}$($.topology).off("drawElement.tooltip4hang").on("drawElement.tooltip4hang",function(event,o){if(!_this.isOpen(_this.type(o))){return}var id=o.id;if($.topology.isContainer(o)||$.topology.isLineseter(o)){var $tooltip=tooltips[id];if($tooltip){if(o.visible&&!o.isExpand){!$tooltip.data("nodata")&&_this._showTooltip(id,$tooltip)}else{$.tooltip("hide",$tooltip)}}}else{var $tooltip=tooltips[id];if($tooltip){if(o.visible){!$tooltip.data("nodata")&&_this._showTooltip(id,$tooltip)}else{$.tooltip("hide",$tooltip)}}}});$($.topology.graphEngine.canvas).off("change.tooltip4hang").on("change.tooltip4hang",function(){_this._countViewCenterCoords();$.each(tooltips,function(id,$tooltip){if($tooltip.is(":visible")){var pos=_this._position(id);pos&&$.tooltip("pos",$tooltip,{left:pos.left,top:pos.top})}})})},data:function(options){if(options){if(options.kpi!=null){status.kpi=options.kpi}if(options.event!=null){status.event=options.event}if(options.avail!=null){status.avail=options.avai}}var _this=this,$this=$(_this),timerName="notice-delay-timer",timer=$this.data(timerName);if(timer){clearTimeout(timer);$this.removeData(timerName)}$this.data(timerName,setTimeout(function(){$this.removeData(timerName);_this.isOpen()&&_this.show()},1000))},selectElementEvents:function(){var $topo=$.topology,$selector=$topo.selector;if($selector.size()===0){return}if($selector.size()===1&&$topo.isView($selector.selected().focus)){return}var selected=$selector.selected(),type,i,$tooltip;for(type in selected){if(type==="focus"){continue}for(i=0,len=selected[type].length;i<len;i++){obj=$topo.find(selected[type][i],type.substr(0,type.length-1));$tooltip=tooltips[obj&&obj.id];if($tooltip){$tooltip.trigger("click")}}}},show:function(type){var _this=this;if(_this.number()<=0){return}var lineType=["lines","lineseters"],symbolType=["symbols","containers"],allType=lineType.concat(symbolType),types=type==1?symbolType:(type==2?lineType:allType);$.each(types,function(i,type){var map=$.topology.shapes[type];$.each(map,function(id,o){var cfg=configs[o.getObjectClass()];if(!cfg){return}var tid=_this._getHangId(id);if(!$.tooltip("existed",tid)){var $tooltip=_this.get(o,cfg);if(_this.isOpen(_this.type(o))&&o.visible){if(!$.topology.isContainer(o)&&!$.topology.isLineseter(o)||!o.isExpand){_this._showTooltip(id,$tooltip,$tooltip.data("nodata"))}}}_this.reload(o.id)})})},hide:function(type){var _this=this;$.each(tooltips,function(id,$tooltip){var tmp=_this.type(id);if(type==1||type==2){tmp==type&&$.tooltip("hide",$tooltip)}else{$.tooltip("hide",$tooltip)}})},reset:function(){var _this=this,id=null,hid=null;configs=null;for(id in tooltips){hid=_this._getHangId(id);
if($.tooltip("existed",hid)){$.tooltip("destroy",hid)}}tooltips={};maxZIndex=0;status={kpi:null,event:null,avail:null};number=null;viewCenterCoords=null;isNodeHang=$.topology.view.option["node-hang-display"]==1;isLineHang=$.topology.view.option["line-hang-display"]==1;isShowLabel=$.topology.view.option["hang-name-display"]==1;isNodeAdapter=$.topology.view.option["node-hang-adapter"]==1;if(isNodeAdapter){nodeHangPos=1}else{nodeHangPos=$.topology.view.option["node-hang-position"]||1}},get:function(o,cfg){var _this=this;o=_this._getObjectById(o);var id=o.id,$tooltip=tooltips[id];cfg=cfg||configs[_this._getClass(o)];if(!o){return null}if(!cfg){return null}if(!$tooltip){var $hang=$("#hangContainer");if(!$hang.length){$("<div/>").attr("id","hangContainer").insertAfter("#svgContainer")}$tooltip=$.tooltip({id:_this._getHangId(id),content:"<div class='nowrap'>数据加载中...</div>",skin:"minihang",parent:"#hangContainer",showAnimateDelay:0,hideAnimateDelay:0,hideAnimateTime:0,offsetLeft:function(){if($.topology.isLine(o)||$.topology.isLineseter(o)){return 0}else{var bbox=o.getIconBBox();return bbox.maxX-bbox.minX+2}},offsetRight:2,offsetTop:function(){if($.topology.isLine(o)||$.topology.isLineseter(o)){return 0}else{var bbox=o.getIconBBox();return bbox.minY-bbox.maxY}},offsetBottom:-2,posLeft:function(){var bbox=$.topology.view.getViewBox(),pos=$.topology.graphEngine.coordsConvert({coords:{x:bbox.x,y:bbox.y},from:"view",to:"svg"});return pos.x},posTop:function(){var bbox=$.topology.view.getViewBox(),pos=$.topology.graphEngine.coordsConvert({coords:{x:bbox.x,y:bbox.y},from:"view",to:"svg"});return pos.y},posWidth:function(){var bbox=$.topology.view.getViewBox(),pos1=$.topology.graphEngine.coordsConvert({coords:{x:bbox.x,y:bbox.y},from:"view",to:"svg"}),pos2=$.topology.graphEngine.coordsConvert({coords:{x:bbox.width+bbox.x,y:bbox.height+bbox.y},from:"view",to:"svg"});return pos2.x-pos1.x},posHeight:function(){var bbox=$.topology.view.getViewBox(),pos1=$.topology.graphEngine.coordsConvert({coords:{x:bbox.x,y:bbox.y},from:"view",to:"svg"}),pos2=$.topology.graphEngine.coordsConvert({coords:{x:bbox.width+bbox.x,y:bbox.height+bbox.y},from:"view",to:"svg"});return pos2.y-pos1.y},isMonitorSize:true,adjustMethodByMonitor:"pos",monitorSizeTime:2000});$tooltip.click(function(){$(this).css("z-index",++maxZIndex)});tooltips[id]=$tooltip}return $tooltip},reload:function(o,callback){var _this=this;o=_this._getObjectById(o);if(!o){return}var id=o.id,tid=_this._getHangId(id),$tooltip=tooltips[id];if(o.kpis){var objcls=o.getObjectClass(),cfg=configs[objcls],$table=$.tooltip("getContent",tid,".tiptable"),kpiNames=cfg.hang.kpis.split(","),cvrNames=cfg.hang.converters.split(","),kpiName,cvrName,cvrCfg,val,cvr,parent,i,kpiZh,kpiUnit,nodata,tmpArr,reload,rowIndex=0,noDataKpis=[];if(!$table||$table.length===0){$table=$("<table/>").addClass("tiptable");$.tooltip("clear",tid);$.tooltip("addContent",tid,$table)}for(i=0,nodata=true;i<kpiNames.length;i++){reload=true;kpiName=kpiNames[i];val=o.kpis[kpiName];if(val==null||val===""){noDataKpis.push(kpiName);$table.removeData(kpiName);tmpArr=$table.data(kpiName+"-rows");if(tmpArr){$.each(tmpArr,function(){$(this).remove()})}continue}cvrName=cvrNames[i];cvrCfg=$.topology.ui.converterConfig[cvrName];parent=$table.data(kpiName);kpiZh=cfg.kpi[kpiName].zhname;kpiUnit=cfg.kpi[kpiName].unit||"";nodata=false;if(!parent){reload=false;parent=_this._createDataRow(kpiName,cvrName,kpiZh,$table,rowIndex);$table.data(kpiName,parent)}tmpArr=$table.data(kpiName+"-rows");rowIndex+=tmpArr?tmpArr.length:0;cvr=cvrCfg?$.converter[cvrCfg.func]:null;if($.isFunction(cvr)){cvr.call($.converter,{value:val,unit:kpiUnit},parent,reload)}else{parent.html(val+$.converter.unit(kpiUnit))}}if(nodata){_this._noDataProcess(id,$tooltip)}else{_this._hasDataProcess(id,o,$tooltip)}}else{_this._noDataProcess(id,$tooltip)}$.isFunction(callback)&&callback.call(_this,null)},_position:function(o){var _this=this;o=_this._getObjectById(o);if(!o){return null}if($.topology.isLine(o)||$.topology.isLineseter(o)){return this._getLinePosition(o)}else{return this._getSymbolPosition(o)}},_getLinePosition:function(o,size){var _this=this;o=_this._getObjectById(o);var nodeALinesCount=o.srcNode.getLines().length,nodeBLinesCount=o.dstNode.getLines().length,rectWidth=size?size.width:tooltips[o.id].outerWidth(),rectHeight=size?size.height:tooltips[o.id].outerHeight(),pos=null;if(nodeALinesCount==nodeBLinesCount){pos=o.getPointAtLength(o.getTotalLength()/2)}else{if(nodeALinesCount>nodeBLinesCount){pos=o.getPointAtLength(o.getTotalLength()*2/3)}else{pos=o.getPointAtLength(o.getTotalLength()/3)}}pos=$.topology.graphEngine.coordsConvert({coords:{x:pos.x,y:pos.y},from:"view",to:"svg"});return{left:parseInt(pos.x-rectWidth/2,10),top:parseInt(pos.y-rectHeight/2,10)}},_getSymbolPosition:function(o,size){var _this=this;o=_this._getObjectById(o);if(isNodeAdapter){var cc=_this._getViewCenterCoords(),cx=cc.viewX,cy=cc.viewY,nbox=o.getIconBBox(),nx=(nbox.minX+nbox.maxX)/2,ny=(nbox.minY+nbox.maxY)/2,r=Math.sqrt(Math.pow(ny-cy,2)+Math.pow(nx-cx,2)),sinA=(ny-cy)/r,cosA=(nx-cx)/r,nw=nbox.maxX-nbox.minX,nh=nbox.maxY-nbox.minY,nd=Math.sqrt(Math.pow(nw,2)+Math.pow(nh,2)),sinB=nh/nd,r1=r+(Math.abs(sinA)>sinB?nh/2/Math.abs(sinA):nw/2/Math.abs(cosA)),nfock=$.topology.graphEngine.coordsConvert({coords:{x:cx+r1*cosA,y:cy+r1*sinA},from:"view",to:"svg"}),r_=Math.sqrt(Math.pow(nfock.y-cc.y,2)+Math.pow(nfock.x-cc.x,2)),sinA_=(nfock.y-cc.y)/r_,cosA_=(nfock.x-cc.x)/r_,r2=Math.sqrt(Math.pow(nfock.y-cc.y,2)+Math.pow(nfock.x-cc.x,2)),$tooltip=tooltips[o.id],tw=$tooltip.outerWidth(),th=$tooltip.outerHeight(),td=Math.sqrt(Math.pow(tw,2)+Math.pow(th,2)),sinC=th/td,r3=r2+(Math.abs(sinA_)>sinC?th/2/Math.abs(sinA_):tw/2/Math.abs(cosA_));
return{left:parseInt(cc.x+r3*cosA_-tw/2),top:parseInt(cc.y+r3*sinA_-th/2)}}else{var rectHeight=size?size.height:tooltips[o.id].outerHeight(),rectWidth=size?size.width:tooltips[o.id].outerWidth(),space=3,bbox=o.getIconBBox(),coords=null;switch(parseInt(nodeHangPos)){case 1:coords=$.topology.graphEngine.coordsConvert({coords:{x:bbox.maxX,y:(bbox.minY+bbox.maxY)/2},from:"view",to:"svg"});return{left:parseInt(coords.x)+space,top:parseInt(coords.y-rectHeight/2,10)};case 2:coords=$.topology.graphEngine.coordsConvert({coords:{x:(bbox.minX+bbox.maxX)/2,y:bbox.maxY},from:"view",to:"svg"});return{left:parseInt(coords.x-rectWidth/2),top:parseInt(coords.y)+space};case 3:coords=$.topology.graphEngine.coordsConvert({coords:{x:bbox.minX,y:(bbox.minY+bbox.maxY)/2},from:"view",to:"svg"});return{left:parseInt(coords.x)-rectWidth-space,top:parseInt(coords.y-rectHeight/2,10)};case 4:coords=$.topology.graphEngine.coordsConvert({coords:{x:(bbox.minX+bbox.maxX)/2,y:bbox.minY},from:"view",to:"svg"});return{left:parseInt(coords.x-rectWidth/2),top:parseInt(coords.y)-rectHeight-space}}}},_getViewCenterCoords:function(){if(!viewCenterCoords){viewCenterCoords=this._countViewCenterCoords()}return viewCenterCoords},_countViewCenterCoords:function(){if(!$.topology.view){return null}var vbox=$.topology.view.getViewBox(),cx=(vbox.x+vbox.x+vbox.width)/2,cy=(vbox.y+vbox.y+vbox.height)/2;viewCenterCoords=$.topology.graphEngine.coordsConvert({coords:{x:cx,y:cy},from:"view",to:"svg"});viewCenterCoords.viewX=cx;viewCenterCoords.viewY=cy;return viewCenterCoords},_showTooltip:function(id,$tooltip,hiddenForce){var pos=this._position(id);$tooltip=$tooltip||tooltips[id];if(pos&&$tooltip){$.tooltip("pos",$tooltip,{left:pos.left,top:pos.top});if(!hiddenForce&&$tooltip.is(":hidden")){$.tooltip("show",$tooltip,{left:pos.left,top:pos.top})}}},_noDataProcess:function(id,$tooltip){var _this=this,timerName="nodata-delay-timer",timer=$tooltip.data(timerName),tid=_this._getHangId(id);_this._changeTooltipContent(tid,"<div class='nowrap'>暂无数据.</div>");if(timer){clearTimeout(timer);$tooltip.removeData(timerName)}$tooltip.data("nodata",true).data(timerName,setTimeout(function(){$tooltip.removeData(timerName);$.tooltip("hide",$tooltip)},8000));_this._showTooltip(id,$tooltip,true)},_hasDataProcess:function(id,o,$tooltip){var _this=this,queueName="nodatahide";$tooltip.data("nodata",false).clearQueue(queueName);if(_this.isOpen(_this.type(o))&&o.visible){if(!$.topology.isContainer(o)&&!$.topology.isLineseter(o)||!o.isExpand){_this._showTooltip(id,$tooltip)}}},_getHangId:function(id){return"hang_"+($.type(id)==="object"?id.id:id)},_changeTooltipContent:function(id,msg){if($.tooltip("existed",id)){$.tooltip("clear",id);if(msg){$.tooltip("addContent",id,msg)}}},_createDataRow:function(kpiName,cvrName,kpiZh,$table,index){var _this=this,detailClass="detail",arr=[],$tr=null,$div=null,style=_this._bigWidgetStyle(cvrName),insert=function($tr){if(index>=0){if(index-1<0){$table.prepend($tr)}else{$table.find(".tiptr:eq("+(index-1)+")").after($tr)}index++}else{$table.append($tr)}};if(style){$tr=$("<tr/>").addClass("tiptr");$("<div class='nowrap'/>").append(kpiZh).appendTo($("<td/>").addClass("tiptdleft2"+(isShowLabel?"":" hide")).attr("colspan",2).appendTo($tr));insert($tr);arr.push($tr);$tr=$("<tr/>").addClass("tiptr");$div=$("<div class='nowrap'/>").addClass(detailClass).css(style).appendTo($("<td/>").addClass("tiptdright2").attr("colspan",2).appendTo($tr));insert($tr);arr.push($tr)}else{var $tr=$("<tr/>").addClass("tiptr").appendTo($table);$("<div class='nowrap'/>").append(kpiZh).appendTo($("<td/>").addClass("tiptdleft"+(isShowLabel?"":" hide")).appendTo($tr));$div=$("<div class='nowrap'/>").addClass(detailClass).appendTo($("<td/>").addClass("tiptdright").appendTo($tr));insert($tr);arr.push($tr)}$table.data(kpiName+"-rows",arr);return $div},_getObjectById:function(id){if(!id){return id}if($.type(id)!=="object"){return $.topology.find(id)}return id},_getClass:function(o){var _this=this;o=_this._getObjectById(o);if(!o){return null}return o.getObjectClass()},_bigWidgetStyle:function(name){return{"PERCENT2GAUGE":{width:"100px",padding:"2px 15px"},"REVERSE_PERCENT2GAUGE":{width:"100px",padding:"5px 10px"},"TEMPERATURE":{width:"60px",padding:"2px 15px"}}[name]}}})(jQuery);